version: '3'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5434:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - service
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 1s
      timeout: 3s
      retries: 30

  main:
    stdin_open: true
    depends_on:
      - postgres
    links:
      - postgres
    container_name: prisma-postgres-api
    ports:
      - 8080:8080
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    command: npm run start:migrate:start
    restart: always
    networks:
      - service
volumes:
  postgres-data:
networks:
  service:
    driver: bridge
# version: '3.8'
# services:
#   postgres:
#     container_name: postgres
#     image: postgres:15.3-alpine
#     restart: always
# ports:
#   - 5432:5432
#     env_file:
#       - .env
#     environment:
#       DATABASE_URL: ${DATABASE_URL}
#     volumes:
#       - postgres:/var/lib/postgresql/data
#     networks:
#       - nestjs
#   api:
#     build:
#       dockerfile: Dockerfile
#       context: .
#       target: development
#     volumes:
#       - .:/usr/src/app
#     environment:
#       DATABASE_URL: ${DATABASE_URL}
#     command: npm run start:dev
#     ports:
#       - 8080:8080
#     depends_on:
#       - postgres
# volumes:
#   postgres:
#     name: nestjs-postgres

# networks:
#   nestjs:
